name: Build npm package for jstz CLI

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      dry_run:
        description: Dry-run CLI build without publishing a release
        type: boolean
        required: false
        default: true
  workflow_call:
    inputs:
      dry_run:
        description: Dry-run SDK build without pushing to NPM
        type: boolean
        required: false
        default: true

jobs:
  set-input-values:
    name: Set input values for workflows triggered by tags
    runs-on: ubuntu-latest
    outputs:
      dry_run: ${{ steps.run.outputs.DRY_RUN }}
    steps:
      - id: run
        run: |
          dry_run=${{ inputs.dry_run }}
          # Default to false because workflows triggered by tags are not going to dry-run
          dry_run=${dry_run:-"false"}
          echo "DRY_RUN=${dry_run}" >> ${GITHUB_OUTPUT}
  macos-arm64:
    name: Build CLI for MacOS Arm64
    runs-on: macos
    outputs:
      artefact_name: ${{ steps.build.outputs.artefact_name }}
    steps:
      - uses: jstz-dev/jstz/.github/actions/build-cli@main
        id: build
        with:
          platform: darwin # To match the platform name in Node.js. This will be referenced by the npm package
          arch: arm64
          repo_token: ${{ secrets.GITHUB_TOKEN }}
  test-macos-arm64:
    name: Test basic CLI usability for MacOS Arm64
    runs-on: macos-14
    needs: [macos-arm64]
    steps:
      - uses: jstz-dev/jstz/.github/actions/test-cli@main
        with:
          artefact_name: ${{ needs.macos-arm64.outputs.artefact_name }}
  linux-amd64:
    name: Build CLI for Linux AMD64
    runs-on: ubuntu-24.04
    # Need to build in an alpine container to ship statically compiled binaries
    # Target: x86_64-unknown-linux-musl
    container:
      image: ghcr.io/jstz-dev/jstz/build_cli:7f08c1b
    steps:
      - uses: actions/checkout@v4
      - name: Build
        shell: sh
        run: make build-cli
      - uses: actions/upload-artifact@v5
        with:
          name: jstz_linux_x64
          path: target/release/jstz
  test-linux-amd64:
    name: Test basic CLI usability for Linux AMD64
    runs-on: ubuntu-24.04
    needs: [linux-amd64]
    steps:
      - uses: jstz-dev/jstz/.github/actions/test-cli@main
        with:
          artefact_name: jstz_linux_x64
  linux-arm64:
    # Need to build in an alpine container to ship statically compiled binaries.
    # Target: aarch64-unknown-linux-musl
    name: Build CLI for Linux Arm64
    runs-on: ubuntu-24.04-arm
    container:
      image: ghcr.io/jstz-dev/jstz/build_cli:7f08c1b
      volumes:
        - /opt:/opt:rw,rshared
        - /opt:/__e/node20:ro,rshared
    steps:
      # Hack for github actions to work in arm64 alpine linux
      # https://github.com/actions/runner/issues/801#issuecomment-2976165281
      - name: Patch native Alpine NodeJS into Runner environment
        shell: sh
        run: |
          sed -i "/^ID=/s/alpine/NotpineForGHA/" /etc/os-release
          apk add nodejs --update-cache
          mkdir /opt/bin
          ln -s /usr/bin/node /opt/bin/node
      - uses: actions/checkout@v4
      - name: Build
        shell: sh
        run: make build-cli
      - uses: actions/upload-artifact@v5
        with:
          name: jstz_linux_arm64
          path: target/release/jstz
  test-linux-arm64:
    name: Test basic CLI usability for Linux Arm64
    runs-on: ubuntu-24.04-arm
    needs: [linux-arm64]
    steps:
      - uses: jstz-dev/jstz/.github/actions/test-cli@main
        with:
          artefact_name: jstz_linux_arm64
  upload-github-release:
    name: Upload to github release
    runs-on: ubuntu-24.04
    permissions:
      contents: write # Required for github release
    needs:
      [test-macos-arm64, test-linux-arm64, test-linux-amd64, set-input-values]
    if: ${{ needs.set-input-values.outputs.dry_run == 'false' || needs.set-input-values.outputs.dry_run == false }}
    steps:
      - uses: actions/download-artifact@v6
        with:
          path: download
      # All downloaded artefacts will be placed in their individual folders with the folder names
      # being the artefact names. We want the final uploaded binaries to be in those artefact names,
      # so this step renames those binaries in individual folders after the folder names.
      - name: Rename artefacts
        run: |
          source="$(pwd)/download"
          for v in $(ls $source); do mv "$source/$v/$(ls $source/$v)" "$v"; done
      - name: Upload release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: jstz_*

  publish-to-npm:
    name: Publish to NPM
    runs-on: ubuntu-24.04
    permissions:
      id-token: write # Required for OIDC
    needs:
      [test-macos-arm64, test-linux-arm64, test-linux-amd64, set-input-values]
    steps:
      - uses: actions/checkout@v4
      - uses: jstz-dev/jstz/.github/actions/publish-npm-package@main
        with:
          package_dir: packages/cli/main
          dry_run: ${{ needs.set-input-values.outputs.dry_run }}
