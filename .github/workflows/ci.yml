name: Continuous Integration

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v6

  # FIXME(https://linear.app/tezos/issue/JSTZ-49):
  # Add build and tests for LIGO contracts

  build:
    name: Build
    runs-on: [x86_64, linux, nix]
    needs: [commitlint]
    steps:
      - uses: actions/checkout@v4
      - run: nix --version
      - name: Format
        run: nix --accept-flake-config fmt -- --fail-on-change
      - name: Prevent blst
        run: nix --accept-flake-config develop -j auto --command sh -c '[ -z "$(cargo tree | grep blst)" ]'
      - name: Build
        run: nix --accept-flake-config --log-format raw -L build -j auto .#all
      - name: Flake check
        run: nix --accept-flake-config --log-format raw --log-lines 70 -L flake check -j auto
      # Coverage is part of nix flake check, but we want to upload it to Codecov
      # So we run it again (it's cached) and upload the result
      - name: Coverage
        run: nix --accept-flake-config --log-format raw -L build .#checks.x86_64-linux.cargo-llvm-cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: result
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    name: Benchmark
    runs-on: [x86_64, linux, nix]
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Run benchmark
        id: bench_head
        run: |
          result=$(nix --accept-flake-config --log-format raw -L run .#tps_bench)
          echo "result=$result" >> $GITHUB_OUTPUT || true
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Run benchmark with base
        id: bench_base
        if: github.event_name == 'pull_request'
        run: |
          echo "result=$(nix --accept-flake-config --log-format raw -L run .#tps_bench)" >> $GITHUB_OUTPUT || true
      - name: Display result
        run: |
          echo "Current branch: ${{ steps.bench_head.outputs.result }}"
          if [ -n "${{ steps.bench_base.outputs.result }}" ]; then
            echo "Base branch (${{ github.event.pull_request.base.ref }}): ${{ steps.bench_base.outputs.result }}"
          fi

  wpt:
    name: Web Platform Test
    runs-on: ubuntu-latest
    container:
      image: rust:1.82-slim
    steps:
      - name: Setup
        run: apt update && apt install -y git curl python3.11 pkg-config libssl-dev
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        run: |
          ln -s /usr/bin/python3.11 /usr/bin/python3
          cd crates/jstz_wpt/wpt && python3 wpt make-hosts-file >> /etc/hosts
          python3 wpt serve &
          cd ../../jstz_runtime && STATS_PATH=$(pwd)/out.txt cargo test --test wpt
          while read line; do
            echo "$line" >> $GITHUB_STEP_SUMMARY
          done < $(pwd)/out.txt

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: [commitlint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Configure npm cache
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      - name: Build with VitePress
        run: npm run docs:build
