name: Run nightly long-running tests

on:
  workflow_dispatch:
  schedule:
    - cron: "30 4 * * *" # Runs at 4:30 am daily

jobs:
  wpt_riscv:
    name: Web Platform Test (RISC-V)
    runs-on: wpt
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build RISCV WPT kernel
        run: nix --accept-flake-config --log-format raw -L develop -j auto --command make riscv-wpt-test-kernel
      - name: Setup WPT test server
        run: |
          cd crates/jstz_wpt/wpt && python3 wpt make-hosts-file >> /etc/hosts
          python3 wpt serve &
      - name: Download Deno test baseline
        run: |
          cd crates/jstz_runtime
          curl -s --output tests/deno_report.json https://storage.googleapis.com/wptd-results/e78446e34a1921371658a5df08c71d83f50a2a2f/deno-2.1.10_4921411-linux-unknown-fccd901f99/report.json
      - name: Execute WPT tests
        run: |
          nix --accept-flake-config --log-format raw -L develop -j auto --command sh -c '
          cd crates/jstz_runtime
          STATS_PATH=$(pwd)/out.txt cargo test --features wpt-in-riscv --test wpt -- --nocapture
          '
      - name: Collect and display test results
        run: |
          cd crates/jstz_runtime
          while read line; do
            echo "$line" >> $GITHUB_STEP_SUMMARY
          done < $(pwd)/out.txt

  build_riscv_kernel:
    name: Build RISCV kernel
    runs-on: [linux, nix]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-riscv-kernel

  benchmark:
    name: Benchmark RISCV kernel
    needs: [build_riscv_kernel]
    runs-on: benchmark
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-benchmark-job
        with:
          run-natively: false
          job-name: "Benchmark RISCV kernel"

  sequencer_riscv_test:
    name: Run sequencer RISCV test
    runs-on: [large, nix]
    needs: [build_riscv_kernel]
    steps:
      - uses: actions/checkout@v4
      - name: Download RISCV kernel
        uses: actions/download-artifact@v5
        with:
          name: riscv_kernel
          path: riscv_kernel
      - name: Run
        run: |
          mv $GITHUB_WORKSPACE/riscv_kernel/kernel-executable crates/jstz_node/tests/riscv_kernel
          cd crates/jstz_node
          nix --accept-flake-config --log-format raw -L develop --command sh -c 'cargo test --test sequencer run_riscv_sequencer --features riscv_test --release'

  runtime_api_coverage:
    name: Runtime API coverage
    uses: jstz-dev/jstz/.github/workflows/runtime-api-coverage.yml@main
