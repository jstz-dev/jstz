name: Build docker image for subsequent jobs

on:
  workflow_call:
    inputs:
      octez-tag:
        description: "tezos/tezos docker tag to be used"
        required: true
        type: string
    outputs:
      jstz-cli:
        description: "jstz docker image tag"
        value: ${{ jobs.build-docker.outputs.jstz-cli }}
      jstz-rollup:
        description: "jstz-rollup docker image tag"
        value: ${{ jobs.build-docker.outputs.jstz-rollup }}
      jstz-node:
        description: "jstz-node docker image tag"
        value: ${{ jobs.build-docker.outputs.jstz-node }}

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_BASE: trilitech

jobs:
  build-docker:
    name: Build (Docker)
    runs-on:
      group: jstz
    permissions:
      contents: read
      packages: write
    outputs:
      jstz-cli: ${{ steps.jstz-cli-tag.outputs.tag || '' }}
      jstz-rollup: ${{ steps.jstz-rollup-tag.outputs.tag || '' }}
      jstz-node: ${{ steps.jstz-node-tag.outputs.tag || '' }}
    strategy:
      matrix:
        include:
          - image: jstz-cli
            dockerfile: ./crates/jstz_cli/Dockerfile
            platforms: linux/amd64, linux/arm64
          - image: jstz-node
            dockerfile: ./crates/jstz_node/Dockerfile
            platforms: linux/amd64
          - image: jstz-rollup
            dockerfile: ./crates/jstz_rollup/Dockerfile
            platforms: linux/amd64
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_BASE }}/${{ matrix.image }}
      - # Extract tags for jstz
        run: echo "tag=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
        id: jstz-cli-tag
        if: matrix.image == 'jstz-cli'
      - # Extract tags for jstz-node
        run: echo "tag=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
        id: jstz-node-tag
        if: matrix.image == 'jstz-node'
      - # Extract tags for jstz-rollup
        run: echo "tag=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
        id: jstz-rollup-tag
        if: matrix.image == 'jstz-rollup'
      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          build-args: |
            OCTEZ_TAG=${{ inputs.octez-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platforms }}
