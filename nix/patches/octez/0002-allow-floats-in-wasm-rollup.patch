diff --git a/src/lib_scoru_wasm/fast/module_cache.ml b/src/lib_scoru_wasm/fast/module_cache.ml
index 9a19d3b16f..0d57ef0d19 100644
--- a/src/lib_scoru_wasm/fast/module_cache.ml
+++ b/src/lib_scoru_wasm/fast/module_cache.ml
@@ -55,7 +55,7 @@ let load_parse_module ~hooks store key durable =
           (fun () ->
             let* _ast =
               Tezos_webassembly_interpreter.Decode.decode
-                ~allow_floats:false
+                ~allow_floats:true
                 ~name:"boot.wasm"
                 ~bytes:kernel
             in
diff --git a/src/lib_scoru_wasm/wasm_vm.ml b/src/lib_scoru_wasm/wasm_vm.ml
index 1b7ce98765..379453673f 100644
--- a/src/lib_scoru_wasm/wasm_vm.ml
+++ b/src/lib_scoru_wasm/wasm_vm.ml
@@ -236,7 +236,7 @@ let unsafe_next_tick_state ~wasm_entrypoint ~version ~stack_size_limit
       let* kernel = Durable.find_value_exn durable Constants.kernel_key in
       let* m =
         Tezos_webassembly_interpreter.Decode.module_step
-          ~allow_floats:false
+          ~allow_floats:true
           kernel
           m
       in
diff --git a/src/lib_wasm_debugger/wasm_debugger.ml b/src/lib_wasm_debugger/wasm_debugger.ml
index a3a21f2d9b..04ba9ad5ae 100644
--- a/src/lib_wasm_debugger/wasm_debugger.ml
+++ b/src/lib_wasm_debugger/wasm_debugger.ml
@@ -47,7 +47,7 @@ let read_kernel_from_file kernel_path =
 
 let parse_binary_module name module_ =
   let bytes = Tezos_lazy_containers.Chunked_byte_vector.of_string module_ in
-  Tezos_webassembly_interpreter.Decode.decode ~allow_floats:false ~name ~bytes
+  Tezos_webassembly_interpreter.Decode.decode ~allow_floats:true ~name ~bytes
 
 (* [typecheck_module module_ast] runs the typechecker on the module, which is
    not done by the PVM. *)
diff --git a/src/lib_wasmer/api_funcs_desc.ml b/src/lib_wasmer/api_funcs_desc.ml
index 40e1a1612c..92c74e6cf7 100644
--- a/src/lib_wasmer/api_funcs_desc.ml
+++ b/src/lib_wasmer/api_funcs_desc.ml
@@ -162,6 +162,11 @@ module Functions (S : FOREIGN) = struct
 
     let delete =
       foreign "wasm_config_delete" (ptr Types.Config.t @-> returning void)
+
+    let canonicalize_nans =
+      foreign
+        "wasm_config_canonicalize_nans"
+        (ptr Types.Config.t @-> bool @-> returning void)
   end
 
   (** Functions with the [wasm_engine_] prefix *)
diff --git a/src/lib_wasmer/config.ml b/src/lib_wasmer/config.ml
index e32b7203bc..8f5fbca586 100644
--- a/src/lib_wasmer/config.ml
+++ b/src/lib_wasmer/config.ml
@@ -62,4 +62,5 @@ let to_owned desc =
   if not has_compiler then raise (Compiler_unavailable desc.compiler) ;
   Functions.Config.set_compiler conf desc.compiler ;
   Functions.Config.set_features conf (make_features ()) ;
+  Functions.Config.canonicalize_nans conf true ;
   conf
