{ parameter
    (or (pair %mint (int %quantity) (address %target))
        (pair %transfer (address %from) (address %to) (nat %value))) ;
  storage (pair (address %admin) (big_map %tokens address nat)) ;
  code { LAMBDA
           (pair (pair address (big_map address nat)) address)
           nat
           { UNPAIR ; CDR ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (pair address (big_map address nat)) address nat)
           (pair address (big_map address nat))
           { UNPAIR 3 ;
             PUSH nat 0 ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DIG 2 ; DROP 2 }
                { DUP ; CDR ; DIG 3 ; SOME ; DIG 3 ; UPDATE ; UPDATE 2 } } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { DUP 2 ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { DROP 4 ; PUSH string "Only `admin` can mint tokens" ; FAILWITH }
                { DUP ;
                  CDR ;
                  DUP 3 ;
                  PAIR ;
                  DIG 4 ;
                  SWAP ;
                  EXEC ;
                  DUP 2 ;
                  CAR ;
                  ADD ;
                  ISNAT ;
                  IF_NONE { PUSH string "Balance underflow" ; FAILWITH } {} ;
                  SWAP ;
                  CDR ;
                  DIG 2 ;
                  PAIR 3 ;
                  EXEC ;
                  NIL operation ;
                  PAIR } }
           { DUP ;
             CAR ;
             DUP 3 ;
             PAIR ;
             DUP 5 ;
             SWAP ;
             EXEC ;
             DUP 2 ;
             GET 4 ;
             SWAP ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "Balance underflow" ; FAILWITH } {} ;
             DUP 2 ;
             CAR ;
             DIG 3 ;
             PAIR 3 ;
             DUP 3 ;
             SWAP ;
             EXEC ;
             DUP 2 ;
             GET 3 ;
             DUP 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             GET 4 ;
             ADD ;
             DIG 2 ;
             GET 3 ;
             DIG 2 ;
             PAIR 3 ;
             EXEC ;
             NIL operation ;
             PAIR } } }

