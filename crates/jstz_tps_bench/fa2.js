function o(e){return typeof e=="string"}function a(e,r){return Array.isArray(r)&&r.reduce((n,t)=>n&&e(t),!0)}function i(e){return typeof e=="number"&&Number.isInteger(e)}function k(e){let r=e;try{return o(r.to)&&i(r.token_id)&&Number.isInteger(r.amount)}catch{return!1}}function w(e){let r=e;try{return o(r.from)&&a(k,r.transfers)}catch{return!1}}function _(e){let r=e;try{return(r.operation==="add_operator"||r.operation==="remove_operator")&&o(r.owner)&&o(r.operator)&&i(r.token_id)}catch{return!1}}function l(e){let r=e;try{return o(r.owner)&&i(r.token_id)}catch{return!1}}function g(e){let r=e;try{return a(l,r.requests)}catch{return!1}}function P(e){let r=e;try{return l(r.request)&&Number.isInteger(r.balance)}catch{return!1}}function R(e){let r=e;try{return i(r.token_id)&&o(r.owner)&&Number.isInteger(r.amount)}catch{return!1}}function u(e){return`token/${e}`}function A(e){let r=u(e);if(Kv.get(r))throw"FA2_TOKEN_ID_EXISTS";Kv.set(u(e),!0)}function h(e){if(!Kv.get(u(e)))throw"FA2_TOKEN_UNDEFINED"}function p(e,r){return`balance/${e}/${r}`}function T(e,r){return Kv.get(p(e,r))||0}function O(e,r,n){if(n<0)throw"FA2_INSUFFICIENT_BALANCE";Kv.set(p(e,r),n)}function d(e,r,n){let t=T(e,r);O(e,r,t+n)}function y(e,r,n,t){d(e,n,-t),d(r,n,t)}function f(e,r,n){return`owner/${e}/${r}/${n}`}function I(e,r,n){Kv.set(f(e,r,n),!0)}function b(e,r,n){Kv.delete(f(e,r,n))}function m(e,r,n){if(!(e===r||Kv.get(f(e,r,n))))throw"FA2_NOT_OPERATOR"}function B(e,r){if(e!==r)throw console.log(`${e} !== ${r}`),"FA2_NOT_OWNER"}function N(e,r,n){h(n.token_id),m(e,r,n.token_id),y(e,n.to,n.token_id,n.amount)}function v(e,r){r.forEach(n=>n.transfers.forEach(t=>N(n.from,e,t)))}function x(e,r){switch(r.operation){case"add_operator":B(r.owner,e),I(r.owner,r.operator,r.token_id);break;case"remove_operator":m(r.owner,e,r.token_id),b(r.owner,r.operator,r.token_id)}}function E(e){let r=T(e.owner,e.token_id);return console.log(`${e.owner} has ${r} of token ${e.token_id}`),{request:e,balance:r}}function S(e){return e.requests.map(E)}function K(e){A(e.token_id),d(e.owner,e.token_id,e.amount)}async function U(e){for(let r=0;r<50000;r++){
Kv.set("rv", r==0?0:parseInt(Kv.get("rv"))+r);
}
if(e.method==="POST"){let r=await e.json();return a(w,r)?(v(e.headers.get("Referer"),r),new Response("Success!")):(console.error("Invalid parameters",JSON.stringify(r)),Response.error())}else{let r="/transfer is a POST request";return console.error(r),new Response(r,{status:500})}}async function $(e){let r=new URL(e.url),n=r.pathname;try{switch(n){case"/ping":return console.log("Hello from runner smart function \u{1F44B}"),new Response("Pong");case"/balance_of":if(e.method==="GET"){let s={requests:JSON.parse(atob(r.searchParams.get("requests")))};if(g(s)){let c=S(s);return Response.json(c)}else return console.error("Invalid parameters",s),Response.error()}else{let s="/balance_of is a GET request";return console.error(s),new Response(s,{status:500})}case"/transfer":return U(e);case"/mint_new":if(e.method==="POST"){let s=await e.json();return a(R,s)?(s.forEach(K),new Response("Success!")):(console.error("Invalid parameters",JSON.stringify(s)),Response.error())}else{let s="/mint_new is a POST request";return console.error(s),new Response(s,{status:500})}case"/update_operators":if(e.method==="PUT"){let s=await e.json();return a(_,s)?(s.forEach(c=>x(e.headers.get("Referer"),c)),new Response("Success!")):(console.error("Invalid parameters",JSON.stringify(s)),Response.error())}else{let s="/update_operators is a PUT request";return console.error(s),new Response(s,{status:500})}default:let t=`Unrecognised entrypoint ${n}`;return console.error(t),new Response(t,{status:404})}}catch(t){throw console.error(t),t}}var q=$;export{q as default,g as isBalanceOf,l as isBalanceRequest,P as isBalanceResponse,R as isMintNew,i as isTokenId,k as isTransfer,w as isTransfers,_ as isUpdateOperator};
