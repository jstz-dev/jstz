[package]
name = "jstz_node"
edition.workspace = true
version.workspace = true
authors.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
readme.workspace = true
license-file.workspace = true
description.workspace = true
include = ["openapi.json", "src", "tests"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow.workspace = true
axum.workspace = true
base64.workspace = true
bincode.workspace = true
clap.workspace = true
dirs.workspace = true
derive_more.workspace = true
env_logger.workspace = true
futures-util.workspace = true
hex.workspace = true
jstz_api = { path = "../jstz_api" }
jstz_core = { path = "../jstz_core" }
jstz_crypto = { path = "../jstz_crypto" }
jstz_proto = { path = "../jstz_proto" }
log.workspace = true
mockito.workspace = true
octez = { path = "../octez" }
parking_lot.workspace = true
r2d2 = { version = "0.8", optional = true }
r2d2_sqlite = { version = "0.22", optional = true }
reqwest.workspace = true
rusqlite = { version = "0.29", optional = true }
serde.workspace = true
serde_json.workspace = true
tempfile.workspace = true
tezos-smart-rollup-encoding.workspace = true
tezos-smart-rollup.workspace = true
tezos_crypto_rs.workspace = true
tezos_data_encoding.workspace = true
thiserror.workspace = true
tokio-stream.workspace = true
tokio-util.workspace = true
tokio.workspace = true
tower-http.workspace = true
utoipa.workspace = true
utoipa-axum.workspace = true
utoipa-scalar.workspace = true

[dev-dependencies]
pretty_assertions.workspace = true

[[bin]]
name = "jstz-node"
path = "src/main.rs"

[features]
persistent-logging = ["dep:r2d2", "dep:r2d2_sqlite", "dep:rusqlite"]
